Before You Begin
	- Create a new repository for this project called python-api-challenge. Do not add this homework to an existing repository.
	- Clone the new repository to your computer.
	- Inside your local git repository, create a directory for both of the Python Challenges. Use folder names corresponding to the challenges: WeatherPy.
	- Inside the folder that you just created, add new files called WeatherPy.ipynb and VacationPy.ipynb. These will be the main scripts to run for each analysis.
	- Upload the output files
	- Push the above changes to GitHub.

VacationPy:
	(DONE) - Note: if you having trouble displaying the maps try running jupyter nbextension enable --py gmaps in your environment and retry.

	Create a heat map that displays the humidity for every city from the part I of the homework.
		- For max intensity in the heat map, try setting it to the highest humidity found in the data set.
		
	Narrow down the DataFrame to find your ideal weather condition. For example:
		- A max temperature lower than 80 degrees but higher than 70.
		- Wind speed less than 10 mph.
		- Zero cloudiness.
		- Drop any rows that don't contain all three conditions. You want to be sure the weather is ideal.
	Using Google Places API to find the first hotel for each city located within 5000 meters of your coordinates.
		- "Remember that each coordinate will trigger a separate call to the Google API. If you're creating your own criteria to plan your vacation, try to reduce the results in your DataFrame to 10 or fewer cities."
		
	Plot the hotels on top of the humidity heatmap with each pin containing the Hotel Name, City, and Country.
	
	As final considerations:
		(DONE) - Create a new GitHub repository for this project called API-Challenge (note the kebab-case). Do not add to an existing repo
		(DONE) - You must complete your analysis using a Jupyter notebook.
		(DONE) - You must use the Matplotlib or Pandas plotting libraries.
		(DONE) - For Part I, you must include a written description of three observable trends based on the data.
		(DONE) - You must use proper labeling of your plots, including aspects like: Plot Titles (with date of analysis) and Axes Labels.
		- For max intensity in the heat map, try setting it to the highest humidity found in the data set.
		
		
(DONE) WEATHERPY:
(DONE) Your final notebook must:
	- (DONE) Randomly select at least 500 unique (non-repeat) cities based on latitude and longitude.
	- (DONE) Perform a weather check on each of the cities using a series of successive API calls.
	- (DONE) Include a print log of each city as it's being processed with the city number and city name.
	- (DONE) Save a CSV of all retrieved data
	- (DONE) Save a PNG image for each scatter plot.
	
	
(DONE) Step 1: Randomly select at least 500 unique (non-repeat) latitude and longitude values
(DONE) Step 2: Get the cities from citipy that map to the coordinates
(DONE) Step 1: Build a series of scatter plots to showcase the following relationships:
	- Temperature (F) vs. Latitude
	- Humidity (%) vs. Latitude
	- Cloudiness (%) vs. Latitude
	- Wind Speed (mph) vs. Latitude
	
(DONE) Step 2: After each plot add a sentence or too explaining what the code is and analyzing.

(DONE) Step 3: run linear regression on each relationship, only this time separating them into Northern Hemisphere (greater than or equal to 0 degrees latitude) and Southern Hemisphere (less than 0 degrees latitude):
	- Northern Hemisphere - Temperature (F) vs. Latitude
	- Southern Hemisphere - Temperature (F) vs. Latitude
	- Northern Hemisphere - Humidity (%) vs. Latitude
	- Southern Hemisphere - Humidity (%) vs. Latitude
	- Northern Hemisphere - Cloudiness (%) vs. Latitude
	- Southern Hemisphere - Cloudiness (%) vs. Latitude
	- Northern Hemisphere - Wind Speed (mph) vs. Latitude
	- Southern Hemisphere - Wind Speed (mph) vs. Latitude
	
(DONE) Step 4: After each pair of plots explain what the linear regression is modelling such as any relationships you notice and any other analysis you may have.

